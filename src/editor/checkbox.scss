/* ========================================================================== */
/*                              Editor - Checkbox                             */
/* ========================================================================== */

// Checkbox style is inspired from @kepano/obsidian-minimal(https://github.com/kepano/obsidian-minimal).

// Icons are from Lucide https://lucide.dev (SVG).

@mixin checkbox-custom-mark($icon-img, $icon-color, $icon-bg) {
  &:checked {
    --checkbox-marker-color: transparent;
    -webkit-mask-size: 0%;
    mask-size: 0%;
    border: none;
    background-color: $icon-bg;

    &:hover {
      opacity: 50%;
    }
    &:after {
      padding-right: 15.5%;
      padding-top: 12%;
      -webkit-mask-image: $icon-img;
      mask-image: $icon-img;
      -webkit-mask-size: 85%;
      mask-size: 85%;
      -webkit-mask-repeat-x: no-repeat;
      -webkit-mask-repeat-y: no-repeat;
      -webkit-mask-position-x: 52%;
      -webkit-mask-position-y: 52%;
      background-color: $icon-color;
    }
  }
}

body {
  --checkbox-radius: 50%;
  /* [x] Done */
  --checklist-done-color: var(--march-50-accent);
  --checklist-done-decoration: line-through solid var(--checklist-done-color) 1px;

  /* [-] Canceled */
  --march-checklist-cancel-color: var(--text-faint);
  --march-checklist-cancel-decoration: line-through solid var(--march-checklist-cancel-color) 1px;
}

body {
  /* [x] Done */
  input[data-task='x'],
  li[data-task='x'] > input,
  li[data-task='x'] > p > input,
  input[data-task='X'],
  li[data-task='X'] > input,
  li[data-task='X'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-check-big"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"/><path d="m9 11 3 3L22 4"/></svg>'), var(--checklist-done-color), transparent);
  }
  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='x']),
  .markdown-preview-view ul li[data-task='x'].task-list-item.is-checked,
  li[data-task='x'].task-list-item.is-checked,
  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='X']),
  .markdown-preview-view ul li[data-task='X'].task-list-item.is-checked,
  li[data-task='X'].task-list-item.is-checked {
    .cm-link {
      color: var(--checklist-done-color);
    }
  }

  /* [-] Canceled */
  input[data-task='-'],
  li[data-task='-'] > input,
  li[data-task='-'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-x"><circle cx="12" cy="12" r="10"/><path d="m15 9-6 6"/><path d="m9 9 6 6"/></svg>'), var(--march-checklist-cancel-color), transparent);
  }

  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='-']),
  .markdown-preview-view ul li[data-task='-'].task-list-item.is-checked,
  li[data-task='-'].task-list-item.is-checked {
    color: var(--march-checklist-cancel-color);
    text-decoration: var(--march-checklist-cancel-decoration);

    .cm-link {
      color: var(--march-checklist-cancel-color);
    }
  }

  /* [/] In Progress */
  input[data-task='/'],
  li[data-task='/'] > input,
  li[data-task='/'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-loader-icon lucide-loader"><path d="M12 2v4"/><path d="m16.2 7.8 2.9-2.9"/><path d="M18 12h4"/><path d="m16.2 16.2 2.9 2.9"/><path d="M12 18v4"/><path d="m4.9 19.1 2.9-2.9"/><path d="M2 12h4"/><path d="m4.9 4.9 2.9 2.9"/></svg>'), var(--color-yellow), transparent);
  }
}

.march-enable-custom-icons {
  /* [p] Planned */
  input[data-task='p'],
  li[data-task='p'] > input,
  li[data-task='p'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-days-icon lucide-calendar-days"><path d="M8 2v4"/><path d="M16 2v4"/><rect width="18" height="18" x="3" y="4" rx="2"/><path d="M3 10h18"/><path d="M8 14h.01"/><path d="M12 14h.01"/><path d="M16 14h.01"/><path d="M8 18h.01"/><path d="M12 18h.01"/><path d="M16 18h.01"/></svg>'), var(--color-cyan), transparent);
  }

  /* [r] Review */
  input[data-task='r'],
  li[data-task='r'] > input,
  li[data-task='r'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-search-check-icon lucide-search-check"><path d="m8 11 2 2 4-4"/><circle cx="11" cy="11" r="8"/><path d="m21 21-4.3-4.3"/></svg>'), var(--color-purple), transparent);
  }
}
