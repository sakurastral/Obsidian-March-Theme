/* ========================================================================== */
/*                              Editor - Checkbox                             */
/* ========================================================================== */
/** Some checkbox style is inspired from @kepano/obsidian-minimal(https://github.com/kepano/obsidian-minimal) */

.enable-styled-checkbox-rounded {
  --checkbox-radius: 50%;
}

// Lucide https://lucide.dev (0.378.0)
.enable-styled-checkbox-custom {
  @mixin checkbox-custom-mark($icon-img, $icon-color, $icon-bg) {
    &:checked {
      --checkbox-marker-color: transparent;
      -webkit-mask-size: 0%;
      mask-size: 0%;
      border: none;
      background-color: $icon-bg;

      &:hover {
        opacity: 50%;
      }
      &:after {
        padding-right: 15.5%;
        padding-top: 12%;
        -webkit-mask-image: $icon-img;
        mask-image: $icon-img;
        -webkit-mask-size: 85%;
        mask-size: 85%;
        -webkit-mask-repeat-x: no-repeat;
        -webkit-mask-repeat-y: no-repeat;
        -webkit-mask-position-x: 52%;
        -webkit-mask-position-y: 52%;
        background-color: $icon-color;
      }
    }
  }

  /* [x] Done */
  --checklist-done-decoration: line-through solid var(--march-50-accent) 1px;
  --checklist-done-color: var(--march-50-accent);

  input[data-task='x'],
  li[data-task='x'] > input,
  li[data-task='x'] > p > input,
  input[data-task='X'],
  li[data-task='X'] > input,
  li[data-task='X'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-check-big"><path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"/><path d="m9 11 3 3L22 4"/></svg>'), var(--checklist-done-color), transparent);
  }

  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='x']),
  .markdown-preview-view ul li[data-task='x'].task-list-item.is-checked,
  li[data-task='x'].task-list-item.is-checked,
  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='X']),
  .markdown-preview-view ul li[data-task='X'].task-list-item.is-checked,
  li[data-task='X'].task-list-item.is-checked {
    .cm-link {
      color: var(--checklist-done-color);
    }
  }

  /* [-] Canceled */
  input[data-task='-'],
  li[data-task='-'] > input,
  li[data-task='-'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-x"><circle cx="12" cy="12" r="10"/><path d="m15 9-6 6"/><path d="m9 9 6 6"/></svg>'), var(--text-faint), transparent);
  }

  .markdown-source-view.mod-cm6 .HyperMD-task-line[data-task]:is([data-task='-']),
  .markdown-preview-view ul li[data-task='-'].task-list-item.is-checked,
  li[data-task='-'].task-list-item.is-checked {
    color: var(--text-faint);
    text-decoration: line-through solid var(--text-faint) 1px;

    .cm-link {
      color: var(--text-faint);
    }
  }

  /* [/] Incomplete */
  input[data-task='/'],
  li[data-task='/'] > input,
  li[data-task='/'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-slash"><line x1="9" x2="15" y1="15" y2="9"/><circle cx="12" cy="12" r="10"/></svg>'), var(--march-accent), transparent);
  }

  /* [!] Important */
  input[data-task='!'],
  li[data-task='!'] > input,
  li[data-task='!'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-alert"><circle cx="12" cy="12" r="10"/><line x1="12" x2="12" y1="8" y2="12"/><line x1="12" x2="12.01" y1="16" y2="16"/></svg>'), var(--color-red), transparent);
  }

  /* ["] Quote */
  input[data-task='“'],
  li[data-task='“'] > input,
  li[data-task='“'] > p > input,
  input[data-task='"'],
  li[data-task='"'] > input,
  li[data-task='"'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-quote"><path d="M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z"/><path d="M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z"/></svg>'), var(--text-faint), transparent);
  }

  /* [*] Star */
  input[data-task='*'],
  li[data-task='*'] > input,
  li[data-task='*'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-star"><polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"/></svg>'), var(--color-yellow), transparent);
  }

  /* [m] Moon */
  input[data-task='m'],
  li[data-task='m'] > input,
  li[data-task='m'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-moon-star"><path d="M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9"/><path d="M20 3v4"/><path d="M22 5h-4"/></svg>'), var(--color-yellow), transparent);
  }

  /* [l] Location */
  input[data-task='l'],
  li[data-task='l'] > input,
  li[data-task='l'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-map-pin"><path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z"/><circle cx="12" cy="10" r="3"/></svg>'), var(--color-green), transparent);
  }

  /* [i] Info */
  input[data-task='i'],
  li[data-task='i'] > input,
  li[data-task='i'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-info"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>'), var(--color-cyan), transparent);
  }

  /* [?] Question */
  input[data-task='?'],
  li[data-task='?'] > input,
  li[data-task='?'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-help"><circle cx="12" cy="12" r="10"/><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"/><path d="M12 17h.01"/></svg>'), var(--color-cyan), transparent);
  }

  /* [M] Money */
  input[data-task='M'],
  li[data-task='M'] > input,
  li[data-task='M'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-dollar-sign"><circle cx="12" cy="12" r="10"/><path d="M16 8h-6a2 2 0 1 0 0 4h4a2 2 0 1 1 0 4H8"/><path d="M12 18V6"/></svg>'), var(--color-orange), transparent);
  }

  /* [+] Plus / Pros */
  input[data-task='+'],
  li[data-task='+'] > input,
  li[data-task='+'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-plus"><circle cx="12" cy="12" r="10"/><path d="M8 12h8"/><path d="M12 8v8"/></svg>'), var(--color-green), transparent);
  }

  /* [_] Minus / Cons */
  input[data-task='_'],
  li[data-task='_'] > input,
  li[data-task='_'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-minus"><circle cx="12" cy="12" r="10"/><path d="M8 12h8"/></svg>'), var(--color-red), transparent);
  }

  /* [=] Equals */
  input[data-task='='],
  li[data-task='='] > input,
  li[data-task='='] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-equal"><path d="M7 10h10"/><path d="M7 14h10"/><circle cx="12" cy="12" r="10"/></svg>'), var(--color-blue), transparent);
  }

  /* [u] User */
  input[data-task='u'],
  li[data-task='u'] > input,
  li[data-task='u'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-circle-user-round"><path d="M18 20a6 6 0 0 0-12 0"/><circle cx="12" cy="10" r="4"/><circle cx="12" cy="12" r="10"/></svg>'), var(--march-accent), transparent);
  }

  /* [p] Password / Key */
  input[data-task='p'],
  li[data-task='p'] > input,
  li[data-task='p'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-key-round"><path d="M2 18v3c0 .6.4 1 1 1h4v-3h3v-3h2l1.4-1.4a6.5 6.5 0 1 0-4-4Z"/><circle cx="16.5" cy="7.5" r=".5" fill="currentColor"/></svg>'), var(--color-yellow), transparent);
  }

  /* [h] Heart */
  input[data-task='h'],
  li[data-task='h'] > input,
  li[data-task='h'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-heart"><path d="M19 14c1.49-1.46 3-3.21 3-5.5A5.5 5.5 0 0 0 16.5 3c-1.76 0-3 .5-4.5 2-1.5-1.5-2.74-2-4.5-2A5.5 5.5 0 0 0 2 8.5c0 2.3 1.5 4.05 3 5.5l7 7Z"/></svg>'), var(--color-red), transparent);
  }

  /* [a] Archive / Box */
  input[data-task='a'],
  li[data-task='a'] > input,
  li[data-task='a'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-archive"><rect width="20" height="5" x="2" y="3" rx="1"/><path d="M4 8v11a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8"/><path d="M10 12h4"/></svg>'), var(--text-faint), transparent);
  }

  /* [c] Calendar */
  input[data-task='c'],
  li[data-task='c'] > input,
  li[data-task='c'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-calendar-days"><path d="M8 2v4"/><path d="M16 2v4"/><rect width="18" height="18" x="3" y="4" rx="2"/><path d="M3 10h18"/><path d="M8 14h.01"/><path d="M12 14h.01"/><path d="M16 14h.01"/><path d="M8 18h.01"/><path d="M12 18h.01"/><path d="M16 18h.01"/></svg>'), var(--color-pink), transparent);
  }

  /* [b] Birthday */
  input[data-task='b'],
  li[data-task='b'] > input,
  li[data-task='b'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-cake"><path d="M20 21v-8a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8"/><path d="M4 16s.5-1 2-1 2.5 2 4 2 2.5-2 4-2 2.5 2 4 2 2-1 2-1"/><path d="M2 21h20"/><path d="M7 8v3"/><path d="M12 8v3"/><path d="M17 8v3"/><path d="M7 4h0.01"/><path d="M12 4h0.01"/><path d="M17 4h0.01"/></svg>'), var(--color-red), transparent);
  }

  /* [r] Food / Restaurant */
  input[data-task='r'],
  li[data-task='r'] > input,
  li[data-task='r'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-utensils"><path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2"/><path d="M7 2v20"/><path d="M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7"/></svg>'), var(--color-cyan), transparent);
  }

  /* [f] Folder */
  input[data-task='f'],
  li[data-task='f'] > input,
  li[data-task='f'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-folder"><path d="M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z"/></svg>'), var(--color-yellow), transparent);
  }

  /* [&] Url */
  input[data-task='&'],
  li[data-task='&'] > input,
  li[data-task='&'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"/><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"/></svg>'), var(--color-blue), transparent);
  }

  /* [A] Award */
  input[data-task='A'],
  li[data-task='A'] > input,
  li[data-task='A'] > p > input {
    @include checkbox-custom-mark(url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-trophy"><path d="M6 9H4.5a2.5 2.5 0 0 1 0-5H6"/><path d="M18 9h1.5a2.5 2.5 0 0 0 0-5H18"/><path d="M4 22h16"/><path d="M10 14.66V17c0 .55-.47.98-.97 1.21C7.85 18.75 7 20.24 7 22"/><path d="M14 14.66V17c0 .55.47.98.97 1.21C16.15 18.75 17 20.24 17 22"/><path d="M18 2H6v7a6 6 0 0 0 12 0V2Z"/></svg>'), var(--color-yellow), transparent);
  }
}
